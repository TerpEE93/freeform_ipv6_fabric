{# Count the number of interfaces which are port channels (ae interfaces) #}
{% set ae_count = interfaces.values()|selectattr('if_type', 'eq', 'port_channel')|list|count %}
{# junos_chassis is a dictionary mapping from interface_name: port_settings_dict,
   in which each port_settings_dict entry is shadowed from the associated interface
   according to its transformation_id.

   For instance, on a Juniper QFX10002, on transformation ID #3 and port ID #2:
   The example interface 'settings' entry from a device profile transformation for interface xe-0/0/1:0 is:

   {"global": {"breakout": true, "fpc": 0, "master_port": 0, "pic": 0, "port": 1, "speed": "10g"}, "interface": {"speed": ""}}

   This information is copied into the device model dump as the below.
   The 'global' component is used by the chassis_config dictionary within
   junos_chassis.jinja, and most of the 'interface' component is documented and used
   within junos_interfaces.jinja.  Different platforms have different rendering
   requirements for channelization and physical port configuration, some requiring
   chassis config and some requiring statements underneath the 'interfaces' section.
    "chassis_config": {
        "0": {
            "0": {
                "1": {
                    "unused": true
                },
                "0": {
                    "sub-ports-count": 4,
                    "breakout": true,
                    "speed": "25g"
                },
                "3": {
                    "unused": true
                },
                "2": {
                    "unused": true
                }
            }
        }
    },


    which will render config as:
    chassis {
        fpc 0 {
            pic 0 {
                port 0 {
                    speed 25g;
                    number-of-sub-ports 4;
                }
                port 1 {
                    unused;
                }
                port 2 {
                    unused;
                }
                port 3 {
                    unused;
                }
            }
        }
    }

    The freeform blueprint will index this information and add it to the
    'chassis_config' device model key for usage by junos_chassis.jinja.

    This schema is described as:

    "chassis_config": {
        <fpc_id> {
        The FPC (Flexible PIC Concentrator) ID that relates to this port
            <pic_id> {
            The PIC (Physical Interface Card) ID that relates to this port
                {port_id}: {
                    The key 'port_id' represents either the master_port in a
                    port-group or a regular port which requires chassis speed
                    configuration. The semantics of the key are already calculated
                    in the chassis_config in the device model.

                    1) If both 'port_id' and 'master_port' are None
                       This port does not require any explicit chassis speed
                       commands rendered and will not be included in the
                       chassis_config dictionary or rendered underneath the
                       chassis section jinja.
                    2) If both 'port_id' and 'master_port' have values
                       This is a port in a port-group that requires the master's
                       port speed to be set.  In this case, the port_id will be
                       taken from 'master_port' for the chassis dictionary for
                       configuration.
                    3) If 'port_id' has a value but 'master_port_id' is None
                       This is a regular port that is not in a port-group, and it
                       requires explicit chassis speed commands to be set.
                    4) If 'master_port_id' has a value and 'port_id' is None
                       This is not a valid combination, and will not be included
                       in the chassis_config dictionary or rendered by jinja.

                    'speed-keyword': <optional str>,
                        Some devices require different commands based on the type of
                        port or the type of hardware platform.  Some devices need
                        'speed 10g', some need 'channel-speed 10g', and others need
                        'channelization-speed 10g'.  If the speed-keyword is not
                        explicitly specified within the device-profile then the
                        dictionary dump will contain 'channel-speed' as it is the
                        most common for chassis configurations.

                    'speed': <str>,
                        The value to use when rendering the 'speed-keyword' command.
                        Different interface types, device platforms, transceiver
                        types have different speed capabilities. This value
                        comes from the device profile.
                        Examples are 10g | 25g | 40g | 100g | 400g

                    'breakout': <bool>,
                        Indicates whether a port is broken out or not, which is
                        used together with 'speed' for port & channel-speed
                        configuration rendering.

                    'fpc': <int as str>,
                        The FPC (Flexible PIC Concentrator) ID that relates to this port
                    'pic': <int as str>,
                        The PIC (Physical Interface Card) ID that relates to this port

                    'master_port': <Optional int>,
                        Physical master port ID for a member of a port-group

                    'port': <Optional int>,
                        Device's physical port ID

                    'sub-ports-count': <optional int>,
                        If this is a parent of a port-group, this indicates the number
                        of subports that this master port will be broken out into.

                    'unused-port-list': <optional list of ints>,
                        On certain platforms, if a port is used for breakout
                        transformation, the platform may require to set other adjacent
                        ports as 'unused' underneath the chassis configuration.
                        This list of port IDs is used to render 'unused' for those
                        ports.
                }
            }
        }
    }

#}
{% if ae_count or chassis_config %}
chassis {
    {# Junos requires explicitly configuring device-count for the number of
       aggregate-ethernet devices which are rendered by junos_interfaces.jinja #}
    {% if ae_count %}
    aggregated-devices {
        ethernet {
            device-count {{ae_count}};
        }
    }
    {% endif %}
    {% if chassis_config %}
        {% for fpc, pic_info in function.sorted_dict(chassis_config) %}
    fpc {{ fpc }} {
            {% for pic, port_info in function.sorted_dict(pic_info) %}
        pic {{ pic }} {
                {% for port, speed_info in function.sorted_dict(port_info) %}
            port {{ port }} {
                    {% if speed_info.get('unused') %}
                unused;
                    {% elif speed_info.get('breakout') %}
                        {% if speed_info.get('sub-ports-count') %}
                speed {{ speed_info['speed'] }};
                number-of-sub-ports {{ speed_info['sub-ports-count'] }};
                        {% else %}
                {{ speed_info.get('speed-keyword') or 'channel-speed' }} {{ speed_info['speed'] }};
                        {% endif %}
                    {% else %}
                speed {{ speed_info['speed'] }};
                    {% endif %}
            }
                {% endfor %}
        }
            {% endfor %}
    }
        {% endfor %}
    {% endif %}
}
{% endif %}
