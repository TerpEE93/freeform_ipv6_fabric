{
  "label": "junos_system.jinja",
  "text": "{#\n    This template includes both the [edit system] and [edit access] containers\n    because, hopefully, the only place we will ever use [edit access] is in\n    the context of a DHCP local server.  In a perfect world, we would use an\n    external DHCP server rather than the switch, but I digress...\n#}\n{% set sys_prop = property_sets.get('custom_sys_properties', {} ) %}\n{% set vrf_vlan = property_sets.get('vrf_vlan', {} ) %}\n\n{% set mgt_vrf = sys_prop.mgt_vrf if 'mgt_vrf' in sys_prop else 'mgmt_junos' %}\n{% set is_mgt_v6 = false %}\n{% if 'mgt_prefix_v6' in sys_prop and sys_prop.mgt_prefix_v6 != '' %}\n    {% set mgt_prefix_v6 = sys_prop.mgt_prefix_v6|to_network %}\n    {% set management_ipv6 = [ mgt_prefix_v6, management_ip ]|join %}\n    {% set is_mgt_v6 = true%}\n{% endif %}\n{% set ns = namespace() %}\n{% set ns.dev_vlan_list = [ ] %}\n{% set ns.vrf_with_dhcp4_server = [ ] %}\n{% set ns.vrf_with_dhcp6_server = [ ] %}\n\nsystem {\n{% if hostname %}\n    host-name {{hostname}};\n{% endif %}\n{% if ('enabled' in sys_prop.dhcp4_server and sys_prop.dhcp4_server.enabled) or\n      ('enabled' in sys_prop.dhcp6_server and sys_prop.dhcp6_server.enabled) %}\n    {% for vrf in vrf_vlan.vrfs %}\n        {% if vrf['dhcp4_mode'] == 'server' -%}\n            {{ ns.vrf_with_dhcp4_server.append(vrf['vrf_name']) or '' }}\n        {%- endif %}\n        {% if vrf['dhcp6_mode'] == 'server' -%}\n            {{ ns.vrf_with_dhcp6_server.append(vrf['vrf_name']) or '' }}\n        {%- endif %}\n    {% endfor %}\n    {% for interface_name, iface in interfaces.items() %}\n        {% if 'mode_trunk' in iface.link_tags or 'mode_access' in iface.link_tags %}\n            {% for vlan in vrf_vlan.vlans %}\n                {% if vlan['vlan_name'] in iface.link_tags -%}\n                    {{ ns.dev_vlan_list.append(vlan['vlan_name']) or \"\" }}\n                {%- endif %}\n            {%- endfor%}\n        {% endif %}\n    {% endfor %}\n    {% if ns.vrf_with_dhcp4_server !=[ ] or ns.vrf_with_dhcp6_server != [ ] %}\n    services {\n        replace: dhcp-local-server {\n        {% if 'enabled' in sys_prop.dhcp4_server and\n        sys_prop.dhcp4_server.enabled %}\n            /* Nothing for DHCPv4 yet */\n        {% endif %}\n        {% if 'enabled' in sys_prop.dhcp6_server and\n            sys_prop.dhcp6_server.enabled %}\n            dhcpv6 {\n            {% for vrf in ns.vrf_with_dhcp6_server %}\n                group {{ vrf }}-LOCAL-SERVER {\n                    overrides {\n                        delegated-pool {{ sys_prop.dhcp6_server.pd_pool_name }};\n                    }\n                {% for vlan in vrf_vlan.vlans %}\n                    {% if vlan['member_of'] == vrf and \n                        vlan['vlan_name'] in ns.dev_vlan_list %}\n                    interface irb.{{ vlan['vlan_id'] }};\n                    {% endif %}\n                {% endfor %}\n                }\n            {% endfor %}\n            }\n        {% endif %}\n        }\n    }\n    {% endif %}\n{% endif %}\n    {% if 'domain_name' in sys_prop %}\n    domain-name {{ sys_prop.domain_name }};\n    {% endif %}\n    {% if 'auth_order' in sys_prop %}\n    replace: authentication-order [{% for method in sys_prop.auth_order %} {{ method }} {% endfor %}];\n    {% endif %}\n    {% if 'dns' in sys_prop and sys_prop.dns.enabled %}\n    replace: name-server {\n        {% for server in sys_prop.dns.servers %}\n        {{ server }} routing-instance {{ mgt_vrf }};\n        {% endfor %}\n    }\n    {% endif %}\n    {% if 'radius' in sys_prop and sys_prop.radius.enabled and\n          'radius' in sys_prop.auth_order %}\n    replace: radius-server {\n        {% for dict_item in sys_prop.radius.servers %}\n        {{ dict_item['host_ip'] }} {\n            routing-instance {{ mgt_vrf }};\n            port {{ dict_item['port'] }};\n            secret {{ dict_item['secret'] }};\n            timeout {{ dict_item['timeout'] }};\n            {% if is_mgt_v6 %}\n            source-address {{ management_ipv6 }};\n            {% endif %}\n        }\n        {% endfor %}\n    }\n    {% endif %}\n    {% if 'tacplus' in sys_prop and sys_prop.tacplus.enabled and\n          'tacplus' in sys_prop.auth_order %}\n    replace: tacplus-server {\n        {% for dict_item in sys_prop.tacplus.servers %}\n        {{ dict_item['host_ip'] }} {\n            routing-instance {{ mgt_vrf }};\n            port {{ dict_item['port'] }};\n            secret {{ dict_item['secret'] }};\n            timeout {{ dict_item['timeout'] }};\n            single-connection;\n            {% if is_mgt_v6 %}\n            source-address {{ management_ipv6 }};\n            {% endif %}\n        }\n        {% endfor %}\n    }\n    {% endif %}\n    {% if 'accounting_dest' in sys_prop and sys_prop.accounting_dest != '' %}\n    replace: accounting {\n        events [ login change-log interactive-commands ];\n        destination {\n        {% if sys_prop.accounting_dest == 'radius' %}\n            radius {\n                server {\n            {% for dict_item in sys_prop.tacplus.servers %}\n                    {{ dict_item['host_ip'] }} {\n                        routing-instance {{ mgt_vrf }};\n                        secret {{ dict_item['secret'] }};\n                        timeout {{ dict_item['timeout'] }};\n                {% if is_mgt_v6 %}\n                        source-address {{ management_ipv6 }};\n                {% endif %}\n                    }\n            {% endfor%}\n                }\n            }\n        {% endif %}\n        {% if sys_prop.accounting_dest == 'tacplus' %}\n            tacplus {\n                server {\n            {% for dict_item in sys_prop.tacplus.servers %}\n                    {{ dict_item['host_ip'] }} {\n                        routing-instance {{ mgt_vrf }};\n                        secret {{ dict_item['secret'] }};\n                        timeout {{ dict_item['timeout'] }};\n                        single-connection;\n                {% if is_mgt_v6 %}\n                        source-address {{ management_ipv6 }};\n                {% endif %}\n                    }\n            {% endfor%}\n                }\n            }\n        {% endif %}\n        }\n    }\n    {% endif %}\n    {% if 'ntp' in sys_prop and sys_prop.ntp.enabled %}\n    replace: ntp {\n        {% for server in sys_prop.ntp.servers %}\n        server {{ server }};\n        {% endfor %}\n        {% if is_mgt_v6 %}\n        source-address {{ management_ipv6 }} routing-instance {{ mgt_vrf }};\n        {% else %}\n        source-address {{ management_ip }} routing-instance {{ mgt_vrf }};\n        {% endif %}\n    }\n    {% endif %}\n    {% if 'syslog_common' in sys_prop and sys_prop.syslog_common.enabled %}\n    replace: syslog {\n        {% if 'archive' in sys_prop.syslog_common %}\n        archive {%- for k, v in sys_prop.syslog_common.archive.items() %} {{ k }} {{ v}} {%- endfor %};\n        {%- endif %} \n        {% if 'time_format' in sys_prop.syslog_common %}\n        time-format {%- for v in sys_prop.syslog_common.time_format %} {{ v}} {%- endfor %};\n        {%- endif %} \n        {% if 'syslog_hosts' in sys_prop %}\n            {% if is_mgt_v6 %}\n        source-address {{ management_ipv6 }};\n            {% endif %}\n        routing-instance {{ mgt_vrf }};\n            {% for k, v in sys_prop.syslog_hosts.items()%}\n        host {{ k }} {\n                {% for dict_item in v %}\n            {{ dict_item['facility'] }} {{ dict_item['priority'] }};\n                {% endfor %}\n        }\n            {% endfor %}\n        {% endif %}\n        {% if 'syslog_files' in sys_prop %}\n            {% for k, v in sys_prop.syslog_files.items()%}\n        file {{ k }} {\n                {% for dict_item in v %}\n            {{ dict_item['facility'] }} {{ dict_item['priority'] }};\n                {% endfor %}\n        }\n            {% endfor %}\n        {% endif %}\n    }\n    {% endif %}\n}\n{# EOF #}\n"
}