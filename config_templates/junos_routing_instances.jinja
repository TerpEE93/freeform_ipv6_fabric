{% set routing_instances = property_sets.get('vrf_vlan', {}).itervalues()|list %}
{% set dev_router_id = function.get_resource_value(resources, 'router_id', 'fabric_resources', 'devices') %}
{% set local_asn = function.get_resource_value(resources, 'asn_assignments', 'fabric_resources', 'devices') %}
{% set rd = dev_router_id|to_ip %}
{% if 'leaf' in system_tags %}
replace: routing-instances {
    VSWITCH {
        instance-type mac-vrf;
        protocols {
            evpn {
                encapsulation vxlan;
            }
        }
        vtep-source-interface lo0.0 inet6;
        service-type vlan-aware;
        route-distinguisher {{ rd }}:65534;
        vrf-target {
            target:100:100;
            auto;
        }
{% for ri in routing_instances %}
    {% for vlan, vlan_items in ri.vlans.iteritems() %}
    {% if loop.first %}
        vlans {
    {% endif %}
            {{ vlan }} {
                vlan-id {{ vlan_items.vlan_id }};
                vxlan {
                    vni {{ vlan_items.vxlan_vni }};
                }
            {% if vlan_items.ip_prefix != "" %}
                l3-interface irb.{{ vlan_items.vlan_id }};
            {% endif %}
            }
    {% if loop.last %}
        }
    {% endif %}
    {% endfor %}
{% endfor %}
    }
{% for ri in routing_instances %}
    {{ri.vrf_name }} {
        instance-type vrf;
    {% for vlan, vlan_items in ri.vlans.iteritems() %}
        {% if vlan_items.ip_prefix != "" %}
        interface irb.{{ vlan_items.vlan_id }};
        {% endif %}
    {% endfor %}
        route-distinguisher {{ rd }}:{{ ri.tenant_vni }};
    {% if local_asn > 65535 %}
        vrf-target target:{{ local_asn }}L:{{ ri.tenant_vni }};
    {% else %}
        vrf-target target:{{ local_asn }}:{{ ri.tenant_vni }};
    {% endif %}
        vrf-table-label;
        routing-options {
            multipath;
            auto-export;
        }
        protocols {
            evpn {
                ip-prefix-routes {
                    advertise direct-nexthop;
                    encapsulation vxlan;
                    vni {{ ri.tenant_vni }};
                    export BGP-AOS-Policy-{{ ri.vrf_name }};
                }
            }
        }
    }
{% endfor %}
}
{% endif %}
{# EOF #}