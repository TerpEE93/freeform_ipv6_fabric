{% set sys_prop = property_sets.get('custom_sys_properties', {} ) %}
{% set prot_prop = property_sets.get('protocol_properties', {}) %}
{% set vrf_vlan = property_sets.get('vrf_vlan', {}) %}
{% set ns = namespace( ) %}
{% set ns.ri_w_bgp = [] %}
{% set ns.ri_w_ospf = [] %}
{% set ns.ri_w_static = [] %}
{% set ns.mgt4_allowed = [ ] %}
{% set ns.mgt6_allowed = [ ] %}
{% set ns.bgp_peer6 = [ ] %}
{% for ri in vrf_vlan.vrfs %}
    {% set ns.is_bgp = false %}
    {% set ns.is_ospf = false %}
    {% set ns.is_static = false %}
    {% for vlan in vrf_vlan.vlans %}
        {% if vlan['is_bgp'] %}{{ ns.ri_w_bgp.append( ri['vrf_name'] ) or '' }}{%- endif %}
        {% if vlan['is_ospf'] %}{{ ns.ri_w_ospf.append( ri['vrf_name'] ) or '' }}{%- endif %}
        {% if vlan['is_static'] %}{{ ns.ri_w_static.append( ri['vrf_name'] ) or '' }}{%- endif %}
    {% endfor %}
{% endfor %}
{% set is_border = false %}
{% if 'gateway_A' in system_tags or 'gateway_B' in system_tags %}
    {% set is_border = true %}
{% endif %}
{# Stuff we need for a Protect-RE filter #}
{% if 'protect_re' in sys_prop and sys_prop.protect_re.enabled %}
    {# Create allowed prefix lists for v4 and v6 #}
    {% if 'mgt_allowed_v4' in sys_prop.protect_re %}
        {% for prefix in sys_prop.protect_re.mgt_allowed_v4 %}
            {{ ns.mgt4_allowed.append(prefix) or '' }}
        {%- endfor %}
    {% endif %}
    {% if 'mgt_allowed_v6' in sys_prop.protect_re %}
        {% for prefix in sys_prop.protect_re.mgt_allowed_v6 %}
            {{ ns.mgt6_allowed.append(prefix) or '' }}
        {%- endfor %}
    {% endif %}
    {# Determine addresses of BGP peers for family inet/inet6 #}
    {% for interface_name, iface in interfaces.items() %}
        {% if iface.get('ipv6_address') %}
            {% set neighbor_interfaces = iface.get('neighbor_interfaces', []) %}
            {% for neighbor_interface in neighbor_interfaces %}
                {% if neighbor_interface.get('ipv6_address') %}
                    {{ ns.bgp_peer6.append(neighbor_interface.ipv6_address) or '' }}
                {%- endif %}
            {% endfor %}
        {% endif %}
    {% endfor %}
    {# Only leaf devices will have peers for family evpn-sgnaling #}
    {% if 'leaf' in system_tags %}
        {% for interface_name, iface in interfaces.items() %}
            {% if iface.get('ipv6_address') %}
                {% set neighbor_interfaces = iface.get('neighbor_interfaces', []) %}
                {% for neighbor_interface in neighbor_interfaces %}
        		    {% set ns.neighbor_loopback = function.get_resource_value(all_resources.get(neighbor_interface.system_id),
                        'loopback_assignments', 'fabric_resources', 'devices') %}
                    {% if ns.neighbor_loopback|to_netmask == 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'
                        or ns.neighbor_loopback|to_netmask == 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe' %}
                        {% set peer_ipv6 = ns.neighbor_loopback|to_ip %}
                    {% else %}
                        {% set peer_ipv6 = ns.neighbor_loopback|replace( '::/', '::1/' )|to_ip %}
                    {% endif %}
                    {{ ns.bgp_peer6.append(peer_ipv6) or '' }}
                {% endfor %}
            {% endif %}
        {% endfor %}
    {% endif %}
{% endif %}
{# Done Protect-RE #}
replace: policy-options {
{% if is_border %}
    {% for ri in vrf_vlan.vrfs %}
        {% if ri['vrf_name'] %}
    route-filter-list RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable{
        0.0.0.0/0 upto /32;
    }
    route-filter-list RoutesFromExtV6-{{ ri['vrf_name'] }}-Default_immutable{
        0::0/0 upto /128;
    }
    route-filter-list RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable {
            {% for vlan in vrf_vlan.vlans %}
                {% if vlan['irb_gateway4'] != '' %}
                    {% set irb_prefix = [ vlan['irb_gateway4'], vlan['ipv4_prefix_len'] ]|join('/')|to_network %}
                    {{ irb_prefix }}/{{ vlan['ipv4_prefix_len'] }} upto /32;
                {% endif %}
            {% endfor %}
    }
    route-filter-list RoutesToExtV6-{{ ri['vrf_name'] }}-Default_immutable {
            {% for vlan in vrf_vlan.vlans %}
                {% if vlan['irb_gateway6'] != '' %}
                    {% set irb_prefix = [ vlan['irb_gateway6'], vlan['ipv6_prefix_len'] ]|join('/')|to_network %}
                    {{ irb_prefix }}/{{ vlan['ipv6_prefix_len'] }} upto /128;
                {% endif %}
            {% endfor %}
    }
        {% endif %}
    {% endfor %}
{% endif %}
{% if ns.mgt4_allowed != [ ] %}
    prefix-list MGT_SUBNETS_v4 {
        {% for prefix in ns.mgt4_allowed %}
        {{ prefix }};
        {% endfor %}
    }
{% endif %}
{% if ns.mgt6_allowed != [ ] %}
    prefix-list MGT_SUBNETS_v6 {
        {% for prefix in ns.mgt6_allowed %}
        {{ prefix }};
        {% endfor %}
    }
{% endif %}
{% if ns.bgp_peer6 != [ ] %}
    prefix-list BGP_PEERS_v6 {
        {% for prefix in ns.bgp_peer6 %}
        {{ prefix }};
        {% endfor %}
    }
{% endif %}
    policy-statement AllPodNetworks {
        term AllPodNetworks-10 {
            from {
                family inet;
                protocol direct;
            }
            then {
                community add DEFAULT_DIRECT_V4;
                accept;
            }
        }
        term AllPodNetworks-20 {
            from {
                family inet6;
                protocol direct;
            }
            then {
                community add DEFAULT_DIRECT_V6;
                accept;
            }
        }
        term AllPodNetworks-100 {
            then reject;
        }
    }
    policy-statement BGP-AOS-Policy {
        term BGP-AOS-Policy-10 {
            from policy AllPodNetworks;
            then accept;
        }
        term BGP-AOS-Policy-20 {
            from {
                protocol bgp;
            }
            then accept;
        }
{% if ns.ri_w_bgp != '' %}
        term BGP-AOS-Policy-50 {
            from {
                protocol evpn;
                route-filter 0.0.0.0/0 prefix-length-range /32-/32;
            }
            then accept;
        }
        term BGP-AOS-Policy-60 {
            from {
                protocol evpn;
                route-filter 0::0/0 prefix-length-range /128-/128;
            }
            then accept;
        }
{% endif %}
        term BGP-AOS-Policy-100 {
            then reject;
        }
    }
    policy-statement EVPN_EXPORT {
        term EVPN_EXPORT-4095 {
            then accept;
        }
    }
    policy-statement LEAF_TO_SPINE_EVPN_OUT {
        term LEAF_TO_SPINE_EVPN_OUT-10 {
            from {
                protocol bgp;
                community FROM_SPINE_EVPN_TIER;
            }
            then reject;
        }
        term LEAF_TO_SPINE_EVPN_OUT-20 {
            then accept;
        }
    }
{% if 'leaf' in system_tags %}
    policy-statement LEAF_TO_SPINE_FABRIC_OUT {
        term LEAF_TO_SPINE_FABRIC_OUT-10 {
            from {
                protocol bgp;
                community FROM_SPINE_FABRIC_TIER;
            }
            then reject;
        }
        term LEAF_TO_SPINE_FABRIC_OUT-20 {
            then accept;
        }
    }
    {% for ri in vrf_vlan.vrfs %}
        {% if ri['vrf_name'] %}
    policy-statement AllPodNetworks-{{ ri['vrf_name'] }} {
        term AllPodNetworks-{{ ri['vrf_name'] }}-10 {
            from {
                family inet;
                protocol [ direct {% if ri['vrf_name'] in ns.ri_w_static %}static {% endif %}];
            }
            then {
                community add {{ ri['vrf_name'] }}_COMMUNITY_V4;
                accept;
            }
        }
        term AllPodNetworks-{{ ri['vrf_name'] }}-20 {
            from {
                family inet6;
                protocol [ direct {% if ri['vrf_name'] in ns.ri_w_static %}static {% endif %}];
            }
            then {
                community add {{ ri['vrf_name'] }}_COMMUNITY_V6;
                accept;
            }
        }
        term AllPodNetworks-{{ ri['vrf_name'] }}-100 {
            then reject;
        }
    }
    policy-statement BGP-AOS-Policy-{{ ri['vrf_name'] }} {
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-10 {
            from {
                policy AllPodNetworks-{{ ri['vrf_name'] }};
            }
            then accept;
        }
            {% if is_border and ri['vrf_name'] in ns.ri_w_bgp %}
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-20 {
            from protocol bgp;
            then accept;
        }
            {% endif %}
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-50 {
            from {
                protocol evpn;
                route-filter 0.0.0.0/0 prefix-length-range /32-/32;
            }
            then {
                community add {{ ri['vrf_name'] }}_COMMUNITY_V4;
                accept;
            }
        }
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-60 {
            from {
                protocol evpn;
                route-filter 0::0/0 prefix-length-range /128-/128;
            }
            then {
                community add {{ ri['vrf_name'] }}_COMMUNITY_V6;
                accept;
            }
        }
            {% if is_border and ri['vrf_name'] in ns.ri_w_ospf %}
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-70 {
            from protocol ospf;
            then {
                community add {{ ri['vrf_name'] }}_COMMUNITY_V4;
                accept;
            }
        }
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-80 {
            from protocol ospf3;
            then {
                community add {{ ri['vrf_name'] }}_COMMUNITY_V6;
                accept;
            }
        }
            {% endif %}
        term BGP-AOS-Policy-{{ ri['vrf_name'] }}-100 {
            then reject;
        }
    }
            {% if is_border %}
    policy-statement RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable {
        term RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable-10 {
            from {
                family inet;
                route-filter-list RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then {
                community delete FABRIC_COMMUNITIES;
                accept;
            }
        }
        term RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable-20 {
            from {
                family inet6;
                route-filter-list RoutesToExtV6-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then {
                community delete FABRIC_COMMUNITIES;
                accept;
            }
        }
        term RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable-30 {
            from family inet;
            then reject;
        }
        term RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable-40 {
            from family inet6;
            then reject;
        }
    }
    policy-statement RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable {
        term RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable-10 {
            from {
                family inet;
                route-filter-list RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then {
                community add RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable;
                accept;
            }
        }
        term RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable-20 {
            from {
                family inet6;
                route-filter-list RoutesFromExtV6-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then {
                community add RoutesFromExtV6-{{ ri['vrf_name'] }}-Default_immutable;
                accept;
            }
        }
        term RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable-30 {
            from family inet;
            then reject;
        }
        term RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable-40 {
            from family inet6;
            then reject;
        }
    }
    policy-statement RoutesToExt-{{ ri['vrf_name'] }}-Aggregate {
        term RoutesToExt-{{ ri['vrf_name'] }}-Aggregate-10 {
            from {
                family inet;
                protocol [ direct aggregate ];
                }
            then {
                community delete FABRIC_COMMUNITIES;
                accept;
            }
        }
        term RoutesToExt-{{ ri['vrf_name'] }}-Aggregate-20 {
            from {
                family inet6;
                protocol [ direct aggregate ];
                }
            then {
                community delete FABRIC_COMMUNITIES;
                accept;
            }
        }
        term RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable-30 {
            from family inet;
            then reject;
        }
        term RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable-40 {
            from family inet6;
            then reject;
        }
    }
    policy-statement RoutesFromExt-{{ ri['vrf_name'] }}-No_Fabric_Routes {
        term RoutesFromExt-{{ ri['vrf_name'] }}-No_Fabric_Routes-10 {
            from {
                family inet;
                route-filter-list RoutesToExt-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then reject;
        }
        term RoutesFromExt-{{ ri['vrf_name'] }}-No_Fabric_Routes-20 {
            from {
                family inet6;
                route-filter-list RoutesToExtV6-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then reject;
        }
        term RoutesFromExt-{{ ri['vrf_name'] }}-No_Fabric_Routes-30 {
            from {
                family inet;
                route-filter-list RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then {
                community add RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable;
                accept;
            }
        }
        term RoutesFromExt-{{ ri['vrf_name'] }}-No_Fabric_Routes-40 {
            from {
                family inet6;
                route-filter-list RoutesFromExtV6-{{ ri['vrf_name'] }}-Default_immutable;
            }
            then {
                community add RoutesFromExtV6-{{ ri['vrf_name'] }}-Default_immutable;
                accept;
            }
        }
    }
    policy-statement AOS-EXPORT-OSPF {
        term AOS-EXPORT-OSPF-10 {
            from {
                family inet;
                protocol [ direct aggregate ];
            }
            then {
                tag {{ prot_prop.ospf.tag_v4 }};
                accept;
            }
        }
        term AOS-EXPORT-OSPF-20 {
            from {
                family inet6;
                protocol [ direct aggregate ];
            }
            then {
                tag {{ prot_prop.ospf.tag_v6 }};
                accept;
            }
        }
        term AOS-EXPORT-OSPF-100 {
            then reject;
        }
    }
    policy-statement AOS-IMPORT-OSPF {
        term AOS-IMPORT-OSPF-10 {
            from tag [ {{ prot_prop.ospf.tag_v4 }} {{ prot_prop.ospf.tag_v6 }} ];
            then reject;
        }
        term AOS-IMPORT-OSPF-100 {
            then accept;
        }
    }
            {% endif %}
        {% endif %}
    {% endfor %}
{% endif %}
{% if 'spine' in system_tags %}
    policy-statement SPINE_TO_LEAF_EVPN_OUT {
        term SPINE_TO_LEAF_EVPN_OUT-10 {
            then {
                community add FROM_SPINE_EVPN_TIER;
                accept;
            }
        }
    }
    policy-statement SPINE_TO_LEAF_FABRIC_OUT {
        term SPINE_TO_LEAF_FABRIC_OUT-10 {
            then {
                community add FROM_SPINE_FABRIC_TIER;
                accept;
            }
        }
    }
{% endif %}
    policy-statement PFE-LB {
        then {
            load-balance per-packet;
        }
    }
    community DEFAULT_DIRECT_V4 members [ 3:20007 21001:26000 ];
    community DEFAULT_DIRECT_V6 members [ 3:20008 21001:26000 ];
    community FROM_SPINE_EVPN_TIER members [ 0:14 ];
    community FROM_SPINE_FABRIC_TIER members [ 0:15 ];
{% if is_border %}
    community FABRIC_COMMUNITIES members [ 0:12 0:13 0:14 0:15 .+:200.. 2....:260.. 9...:260.. ];
{% endif %}
{% for ri in vrf_vlan.vrfs %}
    {% if ri['vrf_name'] and ri['vrf_vni'] %}
    community {{ ri['vrf_name'] }}_COMMUNITY_V4 members [ 3:20007 {{ ri['vrf_vni'] }}:26000 ];
    community {{ ri['vrf_name'] }}_COMMUNITY_V6 members [ 3:20008 {{ ri['vrf_vni'] }}:26000 ];
        {% if is_border %}
    community RoutesFromExt-{{ ri['vrf_name'] }}-Default_immutable members [ 5:20009 {{ ri['vrf_vni'] }}:26000 ];
    community RoutesFromExtV6-{{ ri['vrf_name'] }}-Default_immutable members [ 5:20010 {{ ri['vrf_vni'] }}:26000 ];
        {% endif %}
    {% endif %}
{% endfor %}
}
{# EOF #}